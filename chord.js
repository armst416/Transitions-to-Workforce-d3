// From http://mkweb.bcgsc.ca/circos/guide/tables/
var chord = d3.layout.chord()
    .padding(.05)
    .sortSubgroups(d3.descending)
    .matrix(
      [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 428, 231, 138, 96, 6, 532, 133, 579, 720, 1535, 743, 330, 312, 255, 536, 582, 1671, 2, 987, 273, 423, 416, 5, 209, 430, 440, 6, 786, 406, 324, 1182, 417, 351, 160, 169, 998, 4103, 2973, 248, 29, 5, 1],
 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 42, 4, 1, 0, 0, 3, 1, 3, 0, 0, 0, 4, 0, 0, 1, 0, 19, 0, 4, 0, 1, 1, 0, 1, 0, 0, 0, 2, 9, 1, 4, 6, 6, 2, 3, 3, 16, 20, 0, 0, 0, 0],
 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 3, 0, 0, 0, 1, 10, 0, 1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 1, 9, 47, 4, 5, 0, 1, 4, 0, 0, 0, 0],
 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 3, 1, 3, 0, 4, 15, 13, 0, 0, 2, 2, 12, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 2, 2, 0, 4, 15, 3, 5, 1, 1, 0, 31, 0, 0, 0, 0],
 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 11, 11, 0, 0, 9, 4, 14, 2, 12, 22, 84, 1, 3, 7, 6, 71, 0, 6, 2, 18, 6, 0, 2, 4, 4, 0, 5, 33, 3, 23, 273, 110, 74, 33, 20, 32, 157, 5, 0, 0, 0],
 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 2, 1, 0, 0, 5, 0, 6, 12, 6, 2, 15, 6, 2, 0, 4, 31, 0, 7, 1, 1, 3, 0, 2, 0, 2, 0, 6, 13, 0, 6, 14, 21, 3, 3, 17, 22, 84, 3, 0, 0, 0],
 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 2, 1, 0, 0, 20, 13, 27, 4, 8, 32, 32, 6, 1, 5, 20, 40, 1, 22, 5, 4, 5, 0, 0, 1, 8, 1, 11, 17, 3, 11, 19, 12, 19, 5, 44, 30, 181, 3, 0, 1, 0],
 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 6, 6, 2, 0, 21, 2, 99, 13, 8, 310, 228, 3, 4, 23, 16, 99, 0, 29, 13, 8, 3, 0, 2, 6, 10, 0, 11, 34, 4, 25, 87, 76, 236, 11, 37, 91, 649, 4, 0, 0, 0],
 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 54, 10, 4, 2, 0, 44, 11, 99, 8, 25, 41, 71, 6, 5, 19, 23, 95, 0, 25, 6, 12, 24, 0, 2, 9, 7, 0, 13, 24, 3, 61, 28, 99, 17, 11, 67, 89, 514, 8, 0, 2, 0],
 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 24, 9, 7, 0, 76, 28, 76, 113, 67, 21, 35, 29, 18, 32, 64, 391, 0, 74, 4, 29, 28, 3, 9, 13, 9, 0, 66, 82, 10, 96, 33, 210, 27, 13, 188, 309, 533, 21, 0, 2, 0],
 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 19, 7, 5, 0, 53, 27, 52, 81, 56, 13, 17, 18, 8, 25, 60, 250, 0, 46, 10, 14, 26, 1, 5, 8, 15, 0, 42, 63, 17, 61, 19, 29, 7, 6, 138, 213, 307, 23, 0, 2, 0],
 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 1, 3, 0, 0, 10, 4, 10, 8, 10, 14, 10, 2, 1, 0, 9, 47, 0, 4, 0, 5, 4, 0, 1, 4, 1, 0, 8, 25, 2, 17, 12, 36, 5, 42, 13, 36, 132, 6, 0, 1, 0],
 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 2, 0, 1, 0, 7, 1, 10, 2, 6, 0, 6, 1, 1, 1, 6, 32, 0, 7, 3, 1, 3, 0, 1, 0, 2, 0, 4, 9, 0, 9, 8, 4, 2, 7, 11, 23, 72, 2, 0, 0, 0],
 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 101, 24, 142, 7, 17, 20, 13, 5, 1, 47, 28, 58, 3, 2, 5, 8, 4, 0, 4, 7, 2, 0, 16, 12, 2, 29, 9, 5, 0, 1, 78, 30, 285, 8, 0, 0, 0],
 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 4, 7, 3, 0, 61, 2, 89, 15, 41, 11, 8, 15, 14, 62, 49, 149, 0, 11, 37, 22, 16, 0, 8, 8, 8, 0, 49, 22, 17, 141, 1, 2, 0, 2, 32, 118, 1203, 17, 0, 2, 0],
 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 2, 12, 2, 0, 31, 5, 10, 10, 12, 5, 4, 3, 4, 10, 14, 54, 0, 7, 9, 7, 7, 0, 2, 6, 1, 0, 17, 21, 2, 47, 13, 15, 3, 2, 29, 47, 347, 6, 0, 1, 0],
 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 14, 53, 4, 0, 163, 13, 238, 19, 28, 164, 83, 21, 11, 360, 50, 100, 2, 67, 14, 32, 9, 0, 9, 8, 42, 3, 41, 15, 19, 101, 16, 19, 4, 3, 156, 267, 845, 9, 0, 2, 0],
 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 4, 5, 5, 0, 55, 15, 49, 31, 27, 71, 35, 10, 7, 30, 20, 105, 0, 28, 16, 28, 20, 1, 1, 4, 11, 0, 24, 29, 16, 66, 17, 10, 10, 4, 37, 149, 745, 8, 1, 0, 0],
 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 24, 14, 9, 0, 69, 16, 95, 40, 54, 78, 88, 16, 8, 92, 53, 191, 0, 63, 18, 26, 15, 1, 6, 11, 32, 0, 39, 189, 24, 119, 75, 75, 52, 14, 100, 252, 560, 13, 0, 3, 0],
 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 27, 37, 15, 19, 0, 86, 17, 54, 31, 3558, 41, 17, 83, 47, 34, 157, 254, 1, 179, 36, 74, 56, 0, 30, 46, 46, 0, 190, 52, 110, 156, 7, 19, 7, 7, 175, 338, 411, 47, 8, 1, 0],
 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 19, 13, 7, 10, 0, 56, 22, 69, 132, 315, 20, 31, 46, 172, 47, 93, 917, 0, 321, 13, 108, 104, 2, 8, 62, 24, 0, 531, 192, 445, 156, 24, 28, 8, 7, 95, 6979, 675, 22, 34, 1, 0],
 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 15, 3, 2, 0, 42, 4, 9, 38, 37, 5, 5, 8, 7, 8, 20, 82, 0, 16, 4, 19, 58, 0, 3, 1, 3, 0, 17, 28, 5, 36, 13, 13, 1, 3, 77, 71, 83, 13, 0, 1, 0],
 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 22, 17, 11, 0, 83, 40, 43, 275, 95, 18, 35, 30, 25, 38, 81, 562, 1, 59, 9, 35, 40, 0, 17, 20, 11, 0, 83, 80, 26, 121, 31, 40, 14, 10, 222, 404, 433, 27, 0, 3, 0],
 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 14, 13, 7, 0, 44, 8, 19, 673, 62, 8, 11, 9, 32, 19, 27, 111, 0, 13, 1, 13, 32, 1, 5, 15, 3, 1, 42, 15, 41, 39, 23, 113, 10, 5, 56, 180, 144, 5, 0, 0, 0],
 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 38, 9, 7, 0, 18, 5, 29, 5, 43, 16, 36, 5, 6, 158, 22, 140, 0, 31, 2, 25, 26, 0, 1, 4, 1, 1, 47, 466, 127, 95, 28, 8, 1, 4, 14, 178, 206, 5, 0, 1, 0],
 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 2, 1, 1, 9, 0, 0, 1, 1, 1, 0, 3, 0, 5, 0, 1, 0, 0, 1, 1, 0, 0, 2, 1, 1, 3, 1, 1, 1, 0, 3, 3, 22, 0, 0, 0, 0],
 [0, 0, 0, 0, 22, 3, 3, 0, 1, 1, 1, 3, 1, 1, 2, 0, 0, 1, 1, 0, 0, 1, 0, 5, 0, 3, 0, 1, 1, 1, 0, 0, 9, 1, 1, 2, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
 [0, 1, 0, 5, 206, 178, 14, 4, 1, 8, 28, 95, 127, 466, 47, 1, 1, 4, 1, 0, 26, 25, 2, 31, 0, 140, 22, 158, 6, 5, 36, 16, 43, 5, 29, 5, 18, 0, 7, 9, 38, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
 [0, 0, 0, 5, 144, 180, 56, 5, 10, 113, 23, 39, 41, 15, 42, 1, 3, 15, 5, 1, 32, 13, 1, 13, 0, 111, 27, 19, 32, 9, 11, 8, 62, 673, 19, 8, 44, 0, 7, 13, 14, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
 [0, 3, 0, 27, 433, 404, 222, 10, 14, 40, 31, 121, 26, 80, 83, 0, 11, 20, 17, 0, 40, 35, 9, 59, 1, 562, 81, 38, 25, 30, 35, 18, 95, 275, 43, 40, 83, 0, 11, 17, 22, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
 [0, 1, 0, 13, 83, 71, 77, 3, 1, 13, 13, 36, 5, 28, 17, 0, 3, 1, 3, 0, 58, 19, 4, 16, 0, 82, 20, 8, 7, 8, 5, 5, 37, 38, 9, 4, 42, 0, 2, 3, 15, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
 [0, 1, 34, 22, 675, 6979, 95, 7, 8, 28, 24, 156, 445, 192, 531, 0, 24, 62, 8, 2, 104, 108, 13, 321, 0, 917, 93, 47, 172, 46, 31, 20, 315, 132, 69, 22, 56, 0, 10, 7, 13, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
 [0, 1, 8, 47, 411, 338, 175, 7, 7, 19, 7, 156, 110, 52, 190, 0, 46, 46, 30, 0, 56, 74, 36, 179, 1, 254, 157, 34, 47, 83, 17, 41, 3558, 31, 54, 17, 86, 0, 19, 15, 37, 27, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
 [0, 3, 0, 13, 560, 252, 100, 14, 52, 75, 75, 119, 24, 189, 39, 0, 32, 11, 6, 1, 15, 26, 18, 63, 0, 191, 53, 92, 8, 16, 88, 78, 54, 40, 95, 16, 69, 0, 9, 14, 24, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
 [0, 0, 1, 8, 745, 149, 37, 4, 10, 10, 17, 66, 16, 29, 24, 0, 11, 4, 1, 1, 20, 28, 16, 28, 0, 105, 20, 30, 7, 10, 35, 71, 27, 31, 49, 15, 55, 0, 5, 5, 4, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
 [0, 2, 0, 9, 845, 267, 156, 3, 4, 19, 16, 101, 19, 15, 41, 3, 42, 8, 9, 0, 9, 32, 14, 67, 2, 100, 50, 360, 11, 21, 83, 164, 28, 19, 238, 13, 163, 0, 4, 53, 14, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
 [0, 1, 0, 6, 347, 47, 29, 2, 3, 15, 13, 47, 2, 21, 17, 0, 1, 6, 2, 0, 7, 7, 9, 7, 0, 54, 14, 10, 4, 3, 4, 5, 12, 10, 10, 5, 31, 0, 2, 12, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
 [0, 2, 0, 17, 1203, 118, 32, 2, 0, 2, 1, 141, 17, 22, 49, 0, 8, 8, 8, 0, 16, 22, 37, 11, 0, 149, 49, 62, 14, 15, 8, 11, 41, 15, 89, 2, 61, 0, 3, 7, 4, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
 [0, 0, 0, 8, 285, 30, 78, 1, 0, 5, 9, 29, 2, 12, 16, 0, 2, 7, 4, 0, 4, 8, 5, 2, 3, 58, 28, 47, 1, 5, 13, 20, 17, 7, 142, 24, 101, 0, 0, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
 [0, 0, 0, 2, 72, 23, 11, 7, 2, 4, 8, 9, 0, 9, 4, 0, 2, 0, 1, 0, 3, 1, 3, 7, 0, 32, 6, 1, 1, 1, 6, 0, 6, 2, 10, 1, 7, 0, 1, 0, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
 [0, 1, 0, 6, 132, 36, 13, 42, 5, 36, 12, 17, 2, 25, 8, 0, 1, 4, 1, 0, 4, 5, 0, 4, 0, 47, 9, 0, 1, 2, 10, 14, 10, 8, 10, 4, 10, 0, 0, 3, 1, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
 [0, 2, 0, 23, 307, 213, 138, 6, 7, 29, 19, 61, 17, 63, 42, 0, 15, 8, 5, 1, 26, 14, 10, 46, 0, 250, 60, 25, 8, 18, 17, 13, 56, 81, 52, 27, 53, 0, 5, 7, 19, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
 [0, 2, 0, 21, 533, 309, 188, 13, 27, 210, 33, 96, 10, 82, 66, 0, 9, 13, 9, 3, 28, 29, 4, 74, 0, 391, 64, 32, 18, 29, 35, 21, 67, 113, 76, 28, 76, 0, 7, 9, 24, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
 [0, 2, 0, 8, 514, 89, 67, 11, 17, 99, 28, 61, 3, 24, 13, 0, 7, 9, 2, 0, 24, 12, 6, 25, 0, 95, 23, 19, 5, 6, 71, 41, 25, 8, 99, 11, 44, 0, 2, 4, 10, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
 [0, 0, 0, 4, 649, 91, 37, 11, 236, 76, 87, 25, 4, 34, 11, 0, 10, 6, 2, 0, 3, 8, 13, 29, 0, 99, 16, 23, 4, 3, 228, 310, 8, 13, 99, 2, 21, 0, 2, 6, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
 [0, 1, 0, 3, 181, 30, 44, 5, 19, 12, 19, 11, 3, 17, 11, 1, 8, 1, 0, 0, 5, 4, 5, 22, 1, 40, 20, 5, 1, 6, 32, 32, 8, 4, 27, 13, 20, 0, 0, 1, 2, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
 [0, 0, 0, 3, 84, 22, 17, 3, 3, 21, 14, 6, 0, 13, 6, 0, 2, 0, 2, 0, 3, 1, 1, 7, 0, 31, 4, 0, 2, 6, 15, 2, 6, 12, 6, 0, 5, 0, 0, 1, 2, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
 [0, 0, 0, 5, 157, 32, 20, 33, 74, 110, 273, 23, 3, 33, 5, 0, 4, 4, 2, 0, 6, 18, 2, 6, 0, 71, 6, 7, 3, 1, 84, 22, 12, 2, 14, 4, 9, 0, 0, 11, 11, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
 [0, 0, 0, 0, 31, 0, 1, 1, 5, 3, 15, 4, 0, 2, 2, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 12, 2, 2, 0, 0, 13, 15, 4, 0, 3, 1, 3, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
 [0, 0, 0, 0, 4, 1, 0, 5, 4, 47, 9, 1, 0, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 10, 1, 0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
 [0, 0, 0, 0, 20, 16, 3, 3, 2, 6, 6, 4, 1, 9, 2, 0, 0, 0, 1, 0, 1, 1, 0, 4, 0, 19, 0, 1, 0, 0, 4, 0, 0, 0, 3, 1, 3, 0, 0, 1, 4, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
 [1, 5, 29, 248, 2973, 4103, 998, 169, 160, 351, 417, 1182, 324, 406, 786, 6, 440, 430, 209, 5, 416, 423, 273, 987, 2, 1671, 582, 536, 255, 312, 330, 743, 1535, 720, 579, 133, 532, 6, 96, 138, 231, 428, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
);

var width = 1300,
    height = 910,
    innerRadius = width * .22,
    outerRadius = innerRadius * 1.07;

var fill = d3.scale.ordinal()
    .domain(d3.range(4))
    .range(["#787678","#787678","#787678","#787678","#787678","#787678","#787678","#787678","#787678","#787678","#787678","#787678","#787678","#787678","#787678","#787678","#787678","#787678","#787678","#787678","#ed1c24","#991b20","#972a67","#6e398d","#856699","#5256a6","#30a2d3","#63bdcf","#4d8693","#78c27f","1b7c3e","#4db957","#85a23d","#bbb532","#f1eb18","#f09221","#c64d27"])

var clusters = ["Agriculture", "Mining", "Utilities", "Construction", "Manufacturing", "Wholesale Trade", "Retail Trade", "Transportation", "Information Technology", "Finance & Insurance", "Real Estate", "Professional/Scientific/Tech.", "Management", "Admin./Support/Waste Mgmt./Remediation", "Educational Services", "Health Care & Social Assistance", "Arts/Entertainment & Recreation", "Accomodation & Food Services", "Other Service", "Public Administration", "Agriculture", "Architecture & Construction", "Arts/AV Tech./Communication", "Business Management & Admin.", "Education", "Finance", "Government & Public Admin.", "Health Science", "Hospitality & Tourism", "Human Services", "Information Technology", "Law/Public Safety/Corrections/Security", "Manufacturing", "Marketing", "STEM", "Transportation/Distribution/Logistics", "College Parallel"];

var svg = d3.select("#chart")
  .append("svg")
    .attr("width", width)
    .attr("height", height)
  .append("g")
    .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");

svg.append("g")
  .selectAll("path")
    .data(chord.groups)
  .enter().append("path")
    .style("fill", function(d) { return "#787678"; })
    .style("stroke", function(d) { return "#787678"; })
    //.style("fill", function(d) { return fill(d.index); })
    //.style("stroke", function(d) { return fill(d.index); })
    .attr("d", d3.svg.arc().innerRadius(innerRadius).outerRadius(outerRadius))
    .on("mouseover", fade(.1))
    .on("mouseout", fade(1));

var ticks = svg.append("g")
  .selectAll("g")
    .data(chord.groups)
  .enter().append("g")
  .selectAll("g")
    .data(groupTicks)
  .enter().append("g")
    .attr("transform", function(d) {
      return "rotate(" + (d.angle * 180 / Math.PI - 90) + ")"
          + "translate(" + outerRadius + ",0)";
    });

ticks.append("line")
    .attr("x1", 1)
    .attr("y1", 0)
    .attr("x2", 5)
    .attr("y2", 0)
    .style("stroke", "#787678");

ticks.append("text")
    .attr("x", 8)
    .attr("dy", ".35em")
    .attr("text-anchor", function(d) {
      return d.angle > Math.PI ? "end" : null;
    })
    .attr("transform", function(d) {
      return d.angle > Math.PI ? "rotate(180)translate(-16)" : null;
    })
    .text(function(d) { return d.label; });

var label = svg.append("g")
  .selectAll("g")
    .data(chord.groups)
  .enter().append("g")

label.append("text")
    .each(function(d) { d.angle = (d.startAngle + d.endAngle) / 2; })
    .attr("dy", ".40em")
    .attr("text-anchor", function(d) { return d.angle > Math.PI ? "end" : null; })
    .attr("transform", function(d) {
      return "rotate(" + (d.angle * 180 / Math.PI - 90) + ")"
          + "translate(" + (innerRadius + 50) + ")"
          + (d.angle > Math.PI ? "rotate(180)" : "");
    })
    .text(function(d) { return "Group"; }); //clusters[d.index]; });
    // .on("mouseover", fade(.1))
    // .on("mouseout", fade(1));

svg.append("g")
    .attr("class", "chord")
  .selectAll("path")
    .data(chord.chords)
  .enter().append("path")
    .style("fill", function(d) { return fill(d.target.index); })
    .attr("d", d3.svg.chord().radius(innerRadius))
    .style("opacity", 1);

/** Returns an array of tick angles and labels, given a group. */
function groupTicks(d) {
  var k = (d.endAngle - d.startAngle) / d.value;
  return d3.range(0, d.value, 100).map(function(v, i) {
    return {
      angle: v * k + d.startAngle,
      label: i % 5 ? null : v
    };
  });
}

/** Returns an event handler for fading a given chord group. */
function fade(opacity) {
  return function(g, i) {
    svg.selectAll("g.chord path")
        .filter(function(d) {
          return d.source.index != i && d.target.index != i;
        })
      .transition()
        .style("opacity", opacity);
  };
}
